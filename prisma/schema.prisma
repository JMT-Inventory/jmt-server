// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id           String         @id @default(uuid())
  name         String
  sku          String         @unique
  description  String?
  brand        Brand          @relation(fields: [brandId], references: [id])
  brandId      String
  storage      Storage?       @relation(fields: [storageId], references: [id])
  storageId    String?
  categories   Category[]
  amount       Int
  productEntry ProductEntry[]
  productExit  ProductExit[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  @@map("products")
}

model Brand {
  id          String    @id @default(uuid())
  name        String    @unique
  description String?
  website     String?   @unique
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("brands")
}

model Storage {
  id          String    @id @default(uuid())
  name        String    @unique
  description String
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("storages")
}

model Category {
  id          String    @id @default(uuid())
  name        String    @unique
  description String
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("categories")
}

model Provider {
  id           String         @id @default(uuid())
  name         String
  description  String?        @unique
  email        String?        @unique
  phone        String?        @unique
  website      String?        @unique
  productEntry ProductEntry[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  @@map("providers")
}

model ProductEntry {
  id         String   @id @default(uuid())
  product    Product  @relation(fields: [productId], references: [id])
  productId  String
  amount     Int
  price      Float
  provider   Provider @relation(fields: [providerId], references: [id])
  providerId String
  date       DateTime @default(now())

  @@map("product_entries")
}

model ProductExit {
  id        String   @id @default(uuid())
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  amount    Int
  date      DateTime @default(now())

  @@map("product_exits")
}
